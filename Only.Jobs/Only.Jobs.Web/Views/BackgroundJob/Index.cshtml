@{
    Layout = "~/Views/Shared/_Layout_List.cshtml";
    ViewBag.Title = "任务管理";
}
@section CSS{

}

<div class="wrapper animated fadeInUp" ng-controller="BackgroundJobListController">
    <div class="row">
        <div class="col-sm-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>任务管理</h5>
                </div>

                <div class="ibox-title">
                    <div class="ibox-tools" style="display: inline-block; float: left">
                        <a href="javascript:void(0)" class="btn btn-danger  btn-xs btn-delete">删除</a>
                    </div>

                    <div class="ibox-tools" style="display: inline-block; float: right">
                        <a href="javascript:void(0)" data-title="任务创建" class="btn btn-primary btn-xs btn-creat-job">任务创建</a>
                    </div>
                </div>

                <div class="ibox-content">
                    <form role="form" class="form-inline query-container" id="form_search">
                        <div class="form-group  m-l">
                            <label for="ClassTaskId" class="sr  m-r-xs">名称</label>
                            <input type="text" id="Name" name="Name" class="form-control" ng-model="model.Name">
                        </div>
                        <button class="btn btn-primary btn-search" type="button">搜索</button>
                    </form>

                    <div class="jqGrid_wrapper">
                        <table id="data_grid"></table>
                        <div id="grid_pager_bar"></div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@section JS{
    <script src="/Scripts/controllers/backgroundjob.controller.js"></script>
    <script type="text/javascript">

        /**
         *  加载后台任务列表
         **/
        function BackgroundJobListController($scope, $http, $window) {
            var gridId = 'data_grid';
            $scope.LoadBackgroundJobList = function () {
                oUtils.jqGrid({
                    gridId: gridId,
                    url: '/BackgroundJob/List?r=' + Math.random(),
                    dataIdKey: 'BackgroundJobId',
                    isPager: true,
                    colNames: [
                        "操作",
                        "记录ID",
                        "名称",
                        "状态",
                        "类型",
                        "程序集名称",
                        "类名",
                        "最后运行时间",
                        "下次运行时间",
                        "总运行次数",
                        "描述",
                        "Cron表达式",
                        "Cron表达式描述",
                        //"创建人姓名",
                        //"创建日期时间",
                        //"最后更新人姓名",
                        //"最后更新时间"
                    ],
                    colModel: [
                        { name: 'BackgroundJobId', index: 'BackgroundJobId', width: 120, formatter: $scope.formatModel, edittype: 'custom', hidden: false },
                        { name: "BackgroundJobId", width: 60, index: "BackgroundJobId", sortable: false, hidden: true },
                        { name: "Name", width: 150, index: "Name", sortable: false },
                        { name: "State", width: 105, index: "State", sortable: false, formatter: $scope.formatState },
                        { name: "JobType", width: 80, index: "JobType", sortable: false },
                        { name: "AssemblyName", width: 140, index: "AssemblyName", sortable: false },
                        { name: "ClassName", width: 130, index: "ClassName", sortable: false },
                        { name: "LastRunTime", width: 135, index: "LastRunTime", sortable: false },
                        { name: "NextRunTime", width: 135, index: "NextRunTime", sortable: false },
                        { name: "RunCount", width: 80, index: "RunCount", sortable: false },
                        { name: "Description", width: 140, index: "Description", sortable: false },
                        { name: "CronExpression", width: 100, index: "CronExpression", sortable: false },
                        { name: "CronExpressionDescription", width: 110, index: "CronExpressionDescription", sortable: false },
                        //{ name: "CreatedByUserName", width: GridCreatedByUserNameWidth, index: "CreatedByUserName", sortable: false },
                        //{ name: "CreatedDateTime", width: GridCreatedDateTimeWidth, index: "CreatedDateTime", sortable: false },
                        //{ name: "LastUpdatedByUserName", width: GridLastUpdatedByUserNameWidth, index: "LastUpdatedByUserName", sortable: false },
                        //{ name: "LastUpdatedDateTime", width: GridLastUpdatedDateTimeWidth, index: "LastUpdatedDateTime", sortable: false },
                    ]
                });
            };

            //操作列(编辑，启用/停止)
            $scope.formatModel = function (cellValue, options, rowObject) {
                var btns = [];
                btns.push('<a href="javascript:void(0);" onclick="ShowEditFrame(\'' + cellValue + '\')" class="btn btn-info  btn-xs" >编辑</a>');

                //状态 0-停止  1-运行   3-正在启动中...   5-停止中...
                var State = rowObject.State;
                if (State == 0) {
                    btns.push('<a href="javascript:void(0);" onclick="SetState(\'' + cellValue + '\',3)" class="btn btn-success  btn-xs" >启用</a>');
                } else if (State == 1) {
                    btns.push('<a href="javascript:void(0);" onclick="SetState(\'' + cellValue + '\',5)" class="btn btn-warning  btn-xs" >停止</a>');
                }
                return btns.join('&nbsp;&nbsp;&nbsp;&nbsp;');
            };

            //状态
            $scope.formatState = function (cellValue, options, rowObject) {
                //状态 0-停止  1-运行   3-正在启动中...   5-停止中...
                var state = rowObject.State;
                if (state == 0) {
                    return '<span class="label label-warning">停止</span>';
                } else if (state == 1) {
                    return '<span class="label label-primary">运行</span>';
                } else if (state == 3) {
                    return '<span class="label label-info">启动中...</span>';
                } else if (state == 5) {
                    return '<span class="label label-info">停止中...</span>';
                } else {
                    return '<span class="label label-danger">未知</span>';
                }
            };


            $scope.model = {
                Name: ''
            };

            $(function () {
                $scope.LoadBackgroundJobList();

                $(".query-container .btn-search").click(function () {
                    var parameter = "";
                    parameter += 'Name:' + "'" + escape($scope.model.Name) + "'";
                    oUtils.jqGrid.search(gridId, parameter);
                });
            });
        };


        $(function () {
            //创建新任务
            $('.btn-creat-job').click(function () {
                oUtils.showIframe({
                    areaWidth: '700px',
                    areaHeight: '530px',
                    Url: '/BackgroundJob/Add',
                    title: '后台任务创建',
                    beforeClose: function (index) {
                        if (index > 0) {
                            if (parent != null) {
                                var opt_is_success = parent.layer.getChildFrame('#opt_is_success', index).val();
                                if (opt_is_success && typeof (opt_is_success) != 'undefined' && opt_is_success == 'true') {
                                    $('#data_grid').trigger("reloadGrid");
                                }
                            }
                        }
                    }
                });
            });

            //删除
            $('.btn-delete').click(function () {
                var idList = $('#data_grid').jqGrid('getGridParam', 'selarrrow');
                if (idList != null && idList != '' && idList.length > 0) {
                    if (confirm('确定要删除所选择的行吗？')) {
                        $.post('/BackgroundJob/Delete', { idList: idList.join(',') }, function (result) {
                            if (result.success) {
                                alert('删除成功');
                                $('#data_grid').trigger("reloadGrid");
                            } else {
                                alert(result.message || '操作失败');
                            }
                        }, 'json');
                    }
                } else {
                    alert('请勾选要操作的行 ');
                }
            })
        })

        //编辑
        function ShowEditFrame(BackgroundJobId) {
            oUtils.showIframe({
                areaWidth: '700px',
                areaHeight: '530px',
                Url: '/BackgroundJob/Info?BackgroundJobId=' + BackgroundJobId + '&r=' + Math.random(),
                title: '后台任务编辑',
                beforeClose: function (index) {
                    if (index > 0) {
                        if (parent != null) {
                            var opt_is_success = parent.layer.getChildFrame('#opt_is_success', index).val();
                            if (opt_is_success && typeof (opt_is_success) != 'undefined' && opt_is_success == 'true') {
                                $('#data_grid').trigger("reloadGrid");
                            }
                        }
                    }
                }
            });
        }

        //修改当前任务状态：启用/停止
        function SetState(Id, State) {
            if (confirm('确定要修改当前任务的状态吗？')) {
                $.post('/BackgroundJob/UpdateState', { BackgroundJobId: Id, State: State }, function (result) {
                    if (result.success) {
                        $('#data_grid').trigger("reloadGrid");
                    } else {
                        alert(result.message || '操作失败');
                    }
                }, 'json');
            }
        }
    </script>
}


